name: build
on:
  push:
    branches:
      - new-docs
      - develop
      - master
    paths:
      - .github/workflows/build.yaml
      - mkdocs.yml
      - Dockerfile
      - docs/**
      - src/**
      - docusaurus.config.js
  workflow_dispatch: {}


env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: env
        id: env
        run: |
            echo "::set-output name=tag::$(git rev-parse --short HEAD)"
            if [ "$REF" = "refs/heads/master" ]; then
                echo "::set-output name=release_version::prod"
            else
                echo "::set-output name=release_version::dev"
            fi
        env:
            REF: ${{ github.ref }}

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker


      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/${PROJECT_ID}/subsquid-docs-${RELEASE_VERSION}:${TAG}" \
            --tag "gcr.io/${PROJECT_ID}/subsquid-docs-${RELEASE_VERSION}:latest" \
            .
        env:
            RELEASE_VERSION: ${{ steps.env.outputs.release_version }}
            TAG: ${{ steps.env.outputs.tag }}

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/${PROJECT_ID}/subsquid-docs-${RELEASE_VERSION}:${TAG}"
          docker push "gcr.io/${PROJECT_ID}/subsquid-docs-${RELEASE_VERSION}:latest"
        env:
          RELEASE_VERSION: ${{ steps.env.outputs.release_version }}
          TAG: ${{ steps.env.outputs.tag }}
